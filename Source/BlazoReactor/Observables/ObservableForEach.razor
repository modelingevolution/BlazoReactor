@using System.Collections.Specialized

@typeparam TItem

@if (IsNotifyPropertyChangedEnabled)
{
    @foreach (var item in ItemSource)
    {
        <Observable Source="item"> @ChildContent(item) </Observable>
    }
}
else
{
    @foreach (var item in ItemSource)
    {
        @ChildContent(item)
    }
}

@code 
{

    private IList<TItem> _itemSource;

    [Parameter]
    public RenderFragment<TItem> ChildContent { get; set; }

    [Parameter]
    public bool IsNotifyPropertyChangedEnabled { get; set; }

    [Parameter]
    public IList<TItem> ItemSource
    {
        get => _itemSource;
        set
        {
            if (Equals(_itemSource, value)) return;

            if (_itemSource is INotifyCollectionChanged npc)
                npc.CollectionChanged -= OnCollectionChanged;
            _itemSource = value;

            if (_itemSource is INotifyCollectionChanged npc2)
                npc2.CollectionChanged += OnCollectionChanged;
        }
    }

    private void OnCollectionChanged(object? sender, NotifyCollectionChangedEventArgs e)
    {
        InvokeAsync(StateHasChanged);
    }

}